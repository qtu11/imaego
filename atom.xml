<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>虹墨空间站</title>
  
  <subtitle>虹墨空间站</subtitle>
  <link href="https://www.imaegoo.com/atom.xml" rel="self"/>
  
  <link href="https://www.imaegoo.com/"/>
  <updated>2025-07-11T00:00:00.000Z</updated>
  <id>https://www.imaegoo.com/</id>
  
  <author>
    <name>iMaeGoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 强制锁定屏幕旋转方向</title>
    <link href="https://www.imaegoo.com/2025/orientation-lock/"/>
    <id>https://www.imaegoo.com/2025/orientation-lock/</id>
    <published>2025-07-11T00:00:00.000Z</published>
    <updated>2025-07-11T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在使用我的一加平板时，一直被一个问题困扰，由于我的桌面电源在左手边，平板横着放在桌上时，如果需要充电，就需要将 Type-C 接口对准左侧，这就需要先解除旋转锁定，立起平板，待屏幕旋转后，打开旋转锁定，再放平。使其锁定在充电口朝左的横屏状态（技术上称为 <code>SCREEN_ORIENTATION_REVERSE_LANDSCAPE</code>，屏幕方向反横向）。</p><p>以前用 iPad Pro 时，我也是一直都这么干的，这倒也没啥，但更麻烦的问题来了。有些 APP 由于代码实现问题，会强制屏幕旋转至某个方向，例如在平板打开美团时，会自动切换到竖屏，打开苍雾世界时，会自动切换到充电口朝右的横屏，退出应用时又会自动切回来。于是当我需要以上场景使用这些 APP 时，必须拖着充电线把平板转来转去，不够大的桌面，不够长的充电线，加上 13 寸 1 斤重的平板，让这一切显得格外艰难。</p><span id="more"></span><p>无法忍受的我便去寻找解决方案，有没有什么模块，能让旋转锁定真正发挥『锁定』的作用，让屏幕不受 APP 影响地保持在一个方向？</p><p>找到了 <a href="https://github.com/tuyafeng/OrientationLock">Orientation Lock</a>，这个只有 65 个 star 的软件可能鲜为人知，但作者 tuyafeng 的另一个软件『Via 浏览器』大家应该都听过。Orientation Lock 的体积只有 60 KB，非常符合该作者的风格，只需要悬浮窗权限，不需要 adb 不需要 root 也不需要安装模块。打开 APP，选择『反转横屏』，然后授予悬浮窗权限，好了，现在各个 APP 都可以在反横屏状态下使用了，解决了我的大麻烦！</p><p><img src="/gallery/2025/orientation-lock/1752201059692.webp"></p><p>附上下载地址：<a href="https://github.com/tuyafeng/OrientationLock/releases/download/1.0.0/OrientationLock_v1.0.apk">https://github.com/tuyafeng/OrientationLock/releases/download/1.0.0/OrientationLock_v1.0.apk</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在使用我的一加平板时，一直被一个问题困扰，由于我的桌面电源在左手边，平板横着放在桌上时，如果需要充电，就需要将 Type-C 接口对准左侧，这就需要先解除旋转锁定，立起平板，待屏幕旋转后，打开旋转锁定，再放平。使其锁定在充电口朝左的横屏状态（技术上称为 &lt;code&gt;SCREEN_ORIENTATION_REVERSE_LANDSCAPE&lt;/code&gt;，屏幕方向反横向）。&lt;/p&gt;
&lt;p&gt;以前用 iPad Pro 时，我也是一直都这么干的，这倒也没啥，但更麻烦的问题来了。有些 APP 由于代码实现问题，会强制屏幕旋转至某个方向，例如在平板打开美团时，会自动切换到竖屏，打开苍雾世界时，会自动切换到充电口朝右的横屏，退出应用时又会自动切回来。于是当我需要以上场景使用这些 APP 时，必须拖着充电线把平板转来转去，不够大的桌面，不够长的充电线，加上 13 寸 1 斤重的平板，让这一切显得格外艰难。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Android" scheme="https://www.imaegoo.com/categories/tech/android/"/>
    
    
    <category term="android" scheme="https://www.imaegoo.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>腾讯代码托管服务 Coding 将停服</title>
    <link href="https://www.imaegoo.com/2025/coding-end-of-service/"/>
    <id>https://www.imaegoo.com/2025/coding-end-of-service/</id>
    <published>2025-06-27T01:00:00.000Z</published>
    <updated>2025-06-27T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯云本周宣布 Coding 将在今年 9 月 1 日起停止免费版服务，2028 年 9 月 30 日彻底停止服务。</p><span id="more"></span><p><img src="/gallery/2025/coding-end-of-service/1750987354004.webp"></p><p>原公告：<a href="https://cloud.tencent.com/document/product/1726/116235">https://cloud.tencent.com/document/product/1726/116235</a></p><p>对此我居然一点也不感到意外，毕竟也不是被背刺一回两回了，就是花了点时间把 Coding 上面的代码迁移到阿里云 Codeup。</p><p>公告上说推荐迁移到他们的新一代产品《云原生构建》，我试了一下，连 SSH 都不支持，只能 HTTPS 方式克隆，直接告辞。</p><p><img src="/gallery/2025/coding-end-of-service/1750987517274.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;腾讯云本周宣布 Coding 将在今年 9 月 1 日起停止免费版服务，2028 年 9 月 30 日彻底停止服务。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>微信快速找出自己创建的群聊</title>
    <link href="https://www.imaegoo.com/2025/find-owned-weixin-group/"/>
    <id>https://www.imaegoo.com/2025/find-owned-weixin-group/</id>
    <published>2025-05-08T05:00:00.000Z</published>
    <updated>2025-05-08T05:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>微信本身没有筛选自己创建的群聊的功能，需要将微信的数据库解密，然后通过 SQL 语句查询。</p><span id="more"></span><h3 id="下载所需工具"><a href="#下载所需工具" class="headerlink" title="下载所需工具"></a>下载所需工具</h3><ol><li>微信 4.0.3.22 Windows 版本，最新版本的不行，下载地址: <a href="https://github.com/cscnk52/wechat-windows-versions/releases/tag/v4.0.3.22">https://github.com/cscnk52/wechat-windows-versions/releases/tag/v4.0.3.22</a> (如果这个地址没了就自己再找)</li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746690814601.webp"></p><ol start="2"><li>wechat-dump-rs，下载地址: <a href="https://github.com/0xlane/wechat-dump-rs/releases">https://github.com/0xlane/wechat-dump-rs/releases</a></li><li>DB Browser for SQLite，下载地址: <a href="https://sqlitebrowser.org/dl/#windows">https://sqlitebrowser.org/dl/#windows</a></li></ol><h3 id="解密数据库"><a href="#解密数据库" class="headerlink" title="解密数据库"></a>解密数据库</h3><ol><li>登录微信，保持微信运行</li><li>打开 cmd，cd 到 wechat-dump-rs.exe 所在目录</li><li>执行 <code>wechat-dump-rs.exe -a</code></li><li>如果看到 <code>decryption complete!!</code> 就成功了，output to 后面就是解密后的数据库路径</li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746690948415.webp"></p><h3 id="打开数据库"><a href="#打开数据库" class="headerlink" title="打开数据库"></a>打开数据库</h3><ol><li>到 DB Browser for SQLite 的安装目录，打开 <code>DB Browser for SQLCipher.exe</code></li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746691668841.webp"></p><ol start="2"><li>打开数据库，定位到上一步 output 的目录，打开 <code>contact/contact.db</code></li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746691078525.webp"></p><ol start="3"><li>点执行 SQL</li><li>粘贴以下语句，点执行</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> chat_room.owner, contact.nick_name</span><br><span class="line"><span class="keyword">FROM</span> chat_room</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> contact</span><br><span class="line"><span class="keyword">ON</span> chat_room.username <span class="operator">=</span> contact.username</span><br><span class="line"><span class="keyword">WHERE</span> chat_room.owner <span class="operator">=</span> &quot;换成你的微信号&quot;</span><br><span class="line"><span class="keyword">AND</span> contact.is_in_chat_room <span class="operator">!=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>就可以看到所有自己创建的微信群了</li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746691159125.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;微信本身没有筛选自己创建的群聊的功能，需要将微信的数据库解密，然后通过 SQL 语句查询。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>将扣子空间生成的 jsx 格式网页部署到自己的服务器</title>
    <link href="https://www.imaegoo.com/2025/coze-space-jsx/"/>
    <id>https://www.imaegoo.com/2025/coze-space-jsx/</id>
    <published>2025-04-29T00:00:00.000Z</published>
    <updated>2025-04-29T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>扣子空间生成的网页是 jsx 格式的，在扣子空间内可以正常打开，如果想要部署到自己的服务器，则需要经过编译。</p><p>为此，我写了一个模板，只需将扣子空间生成的 jsx 重命名为 <code>coze.tsx</code>（注意后缀要改为 tsx）放入本项目 <code>src</code> 目录，即可编译出可静态部署的 dist 产物。</p><span id="more"></span><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><ol><li>从扣子空间下载 jsx 文件</li></ol><p><img src="/gallery/2025/coze-space-jsx/1745907200269.webp"></p><ol start="2"><li>下载 <a href="https://github.com/imaegoo/coze-space-jsx-template">模板工程</a></li><li>安装 Node.js</li><li>进入本项目所在目录，运行 <code>npm install -g pnpm</code> 安装 pnpm 包管理器</li><li>运行 <code>pnpm install</code> 安装依赖</li><li>将扣子空间生成的 jsx 重命名为 <code>coze.tsx</code>（注意后缀要改为 tsx），放入 <code>src</code> 目录，覆盖原有的 <code>coze.tsx</code> 文件</li></ol><p><img src="/gallery/2025/coze-space-jsx/1745898560927.webp"></p><ol start="7"><li>检查 <code>coze.tsx</code> 中的 <code>import</code> 语句，确保所有第三方包都已经安装，举例：如果 <code>coze.tsx</code> 中有 <code>import Mermaid from &#39;mermaid&#39;;</code>，就执行安装 <code>pnpm install mermaid</code></li><li>运行 <code>pnpm run dev</code> 查看效果</li></ol><p><img src="/gallery/2025/coze-space-jsx/1745898552039.webp"></p><ol start="9"><li>运行 <code>pnpm run build</code> 编译</li><li>编译完成后，在 <code>dist</code> 目录下即可找到编译后的产物</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;扣子空间生成的网页是 jsx 格式的，在扣子空间内可以正常打开，如果想要部署到自己的服务器，则需要经过编译。&lt;/p&gt;
&lt;p&gt;为此，我写了一个模板，只需将扣子空间生成的 jsx 重命名为 &lt;code&gt;coze.tsx&lt;/code&gt;（注意后缀要改为 tsx）放入本项目 &lt;code&gt;src&lt;/code&gt; 目录，即可编译出可静态部署的 dist 产物。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="nodejs" scheme="https://www.imaegoo.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>扣子空间邀请码</title>
    <link href="https://www.imaegoo.com/2025/coze-space-code/"/>
    <id>https://www.imaegoo.com/2025/coze-space-code/</id>
    <published>2025-04-24T00:00:00.000Z</published>
    <updated>2025-05-06T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>字节跳动出了一个类 Manus 的 AI Agent 工具，叫扣子空间，目前是邀请码内测机制，在此分享几个邀请码。</p><p>邀请码使用地址: <a href="https://space.coze.cn/">https://space.coze.cn</a></p><p>用完记得评论说下已使用，如果邀请码都已使用，可以评论提醒我补充更多的邀请码。</p><span id="more"></span><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Q4RA5622 已激活</span><br><span class="line">54W9053G 已激活</span><br><span class="line">4YUTZNOV 已激活</span><br><span class="line">XFZKRCIZ 已激活</span><br><span class="line">HZFQRQVC 已激活</span><br></pre></td></tr></table></figure><h3 id="续-1"><a href="#续-1" class="headerlink" title="续 1"></a>续 1</h3><p>发出来才 3 分钟不到就全被用了，然而没一个人留言。有真正需求的可以关注博客页面左边的公众号（虹墨iMaeGoo）私信我获取。</p><h3 id="续-2"><a href="#续-2" class="headerlink" title="续 2"></a>续 2</h3><p>我的所有 20 个邀请码都发放完毕了，你可以通过其他渠道获得邀请码 - <a href="https://docs.qq.com/sheet/DUkdXa1JtQWtlSXJp">https://docs.qq.com/sheet/DUkdXa1JtQWtlSXJp</a></p><h3 id="续-3"><a href="#续-3" class="headerlink" title="续 3"></a>续 3</h3><p>更多邀请码放出</p><!-- /\n+(已|未)激活\n+/ --><!-- / $1激活\n/ --><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">8D01YILO 已激活</span><br><span class="line">SCFBW27F 已激活</span><br><span class="line">GPI4P0OL 已激活</span><br><span class="line">EDW7VRLW 已激活</span><br><span class="line">3HIZ37XF 已激活</span><br><span class="line">Q4RA5622 已激活</span><br><span class="line">54W9053G 已激活</span><br><span class="line">4YUTZNOV 已激活</span><br><span class="line">XFZKRCIZ 已激活</span><br><span class="line">HZFQRQVC 已激活</span><br><span class="line">D7FWIMJ4 已激活</span><br><span class="line">H9ZM7KQ1 已激活</span><br><span class="line">94PYYP6R 已激活</span><br><span class="line">5HO53HQL 已激活</span><br><span class="line">4YQYH3BC 已激活</span><br><span class="line">C5QJ9RUZ 已激活</span><br><span class="line">42BGV4OD 已激活</span><br><span class="line">C5IKZ13G 已激活</span><br><span class="line">F4R5RQWX 已激活</span><br><span class="line">P449LTOC 已激活</span><br><span class="line">RAL58FKV 已激活</span><br><span class="line">H7K47ET3 已激活</span><br><span class="line">IP765WVL 已激活</span><br><span class="line">H8WDAT20 已激活</span><br><span class="line">ST25AOYY 已激活</span><br><span class="line">V0NRUE3G 已激活</span><br><span class="line">KM0M6HN1 已激活</span><br><span class="line">S97PP4AU 已激活</span><br><span class="line">HE830CXE 已激活</span><br><span class="line">I2ODIZ9M 已激活</span><br><span class="line">CCLLI44L 已激活</span><br><span class="line">MLNM7A0J 已激活</span><br><span class="line">BB2HDWAE 已激活</span><br><span class="line">MLS3IYRN 已激活</span><br><span class="line">9LL7XO6G 已激活</span><br><span class="line">WDIE546J 已激活</span><br><span class="line">96OSOHQT 已激活</span><br><span class="line">EDJ182QW 已激活</span><br><span class="line">LUPTYN8S 已激活</span><br><span class="line">OSIF6AYZ 已激活</span><br><span class="line">BED56SSX 已激活</span><br><span class="line">2M7GCFDZ 已激活</span><br><span class="line">CSDP4RGF 已激活</span><br><span class="line">YIMVWMDB 已激活</span><br><span class="line">HFZAHFQV 已激活</span><br><span class="line">1ZP0HMH5 已激活</span><br><span class="line">HHF0R59D 已激活</span><br><span class="line">8QPRC46N 已激活</span><br><span class="line">G9GAKQ1V 已激活</span><br><span class="line">VN8YCOSM 已激活</span><br><span class="line">BKIE162P 已激活</span><br><span class="line">K4U0ALR0 已激活</span><br><span class="line">ZEC6EJN8 已激活</span><br><span class="line">8LFS25M2 已激活</span><br><span class="line">CGGCT0JK 已激活</span><br><span class="line">33XCKI66 已激活</span><br><span class="line">N32IX2ED 已激活</span><br><span class="line">5BM48I2I 已激活</span><br><span class="line">XJ8YJ9BQ 已激活</span><br><span class="line">FG677MC8 已激活</span><br><span class="line">CPQAI352 已激活</span><br><span class="line">3FL0OJ28 已激活</span><br><span class="line">FQQ6GR3O 已激活</span><br><span class="line">HZX6TK2L 已激活</span><br><span class="line">HEVFPIR7 已激活</span><br><span class="line">BOLFJACA 已激活</span><br><span class="line">7R7NYYSU 已激活</span><br><span class="line">MZRZF6OO 已激活</span><br><span class="line">N65LQH12 已激活</span><br><span class="line">XH8QCFBT 已激活</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;字节跳动出了一个类 Manus 的 AI Agent 工具，叫扣子空间，目前是邀请码内测机制，在此分享几个邀请码。&lt;/p&gt;
&lt;p&gt;邀请码使用地址: &lt;a href=&quot;https://space.coze.cn/&quot;&gt;https://space.coze.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用完记得评论说下已使用，如果邀请码都已使用，可以评论提醒我补充更多的邀请码。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>Midscene.js：AI驱动的自动化测试工具</title>
    <link href="https://www.imaegoo.com/2025/midscene-js/"/>
    <id>https://www.imaegoo.com/2025/midscene-js/</id>
    <published>2025-03-19T00:00:00.000Z</published>
    <updated>2025-04-29T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>字节有一个很实用但不怎么火的项目，叫 Midscene.js，Chrome 商店上的安装数仅有 1 万，它是一个由多模态模型驱动的前端自动化测试插件。</p><p>Midscene.js 一共就三大 API：Action、Query、Assert</p><h3 id="Action-交互"><a href="#Action-交互" class="headerlink" title="Action 交互"></a>Action 交互</h3><p>描述步骤并执行交互。例如，在 GitHub 上交互：查找 GitHub 上的 Twikoo 项目，点进详情页，点个 Star——</p><span id="more"></span><p><img src="/gallery/2025/midscene-js/1742369313963.webp"></p><h3 id="Query-提取"><a href="#Query-提取" class="headerlink" title="Query 提取"></a>Query 提取</h3><p>从 UI 中“理解”并提取数据，返回值是 JSON 格式，想要什么数据结构，它都可以给你。例如，在面试题宝典网站上提取：string[]，所有面试题目——</p><p><img src="/gallery/2025/midscene-js/1742369386304.webp"></p><h3 id="Assert-断言"><a href="#Assert-断言" class="headerlink" title="Assert 断言"></a>Assert 断言</h3><p>判断是否符合指定条件。例如，在智能家庭页面断言：电脑是关着的——</p><p><img src="/gallery/2025/midscene-js/1742369649542.webp"></p><h3 id="大模型支持情况"><a href="#大模型支持情况" class="headerlink" title="大模型支持情况"></a>大模型支持情况</h3><p>项目最初仅支持 GPT-4o 模型，跑一行用例的成本在 ¥0.1 左右，还挺贵的，后来支持了 Qwen-2.5-VL 和 UI-TARS，成本就大幅降低了。以下就以千问模型为例，带领大家上手这个神奇的插件。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>可以直接从 Chrome 商店安装：<br><a href="https://chromewebstore.google.com/detail/midscene/gbldofcpkknbggpkmbdaefngejllnief">https://chromewebstore.google.com/detail/midscene/gbldofcpkknbggpkmbdaefngejllnief</a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>从浏览器右上角的插件菜单中打开 Midscene.js 的侧边栏，会提示 No config，点击按钮会弹出 Env Config 的设置框，在里面配置以下变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OPENAI_BASE_URL=&quot;https://dashscope.aliyuncs.com/compatible-mode/v1&quot;</span><br><span class="line">OPENAI_API_KEY=&quot;sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span><br><span class="line">MIDSCENE_MODEL_NAME=&quot;qwen-vl-max-latest&quot;</span><br><span class="line">MIDSCENE_USE_QWEN_VL=1</span><br></pre></td></tr></table></figure><p>其中的 <code>OPENAI_API_KEY</code> 需要你自己申请，申请的地址是：<br><a href="https://bailian.console.aliyun.com/?apiKey=1#/api-key">https://bailian.console.aliyun.com/?apiKey=1#/api-key</a></p><p>以上链接不包含推广，如果你是首次开通阿里云百炼，新用户是有免费额度的，请注意额度的有效期，避免浪费~</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>接下来用自然语言随便写一条指令，点击 Run 按钮，见证 AI 开始接管你的浏览器……</p><h3 id="代码集成"><a href="#代码集成" class="headerlink" title="代码集成"></a>代码集成</h3><p>接下来我们尝试编写爬虫，组合这三大 API，完成复杂的自动化任务。</p><p>建一个新的 Node.js 项目，安装所需的依赖——</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install @midscene/web tsx --save-dev</span><br></pre></td></tr></table></figure><p>编写脚本 <code>main.ts</code>，执行你想要进行的操作，例如，打开必应，输入 iMaeGoo 点击搜索，并输出搜索结果——</p><figure class="highlight ts"><figcaption><span>main.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AgentOverChromeBridge</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@midscene/web/bridge-mode&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">ms: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">setTimeout</span>(r, ms));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">OPENAI_BASE_URL</span> =</span><br><span class="line">    <span class="string">&quot;https://dashscope.aliyuncs.com/compatible-mode/v1&quot;</span>;</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">OPENAI_API_KEY</span> = <span class="string">&quot;sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span>;</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">MIDSCENE_MODEL_NAME</span> = <span class="string">&quot;qwen-vl-max-latest&quot;</span>;</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">MIDSCENE_USE_QWEN_VL</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> agent = <span class="keyword">new</span> <span class="title class_">AgentOverChromeBridge</span>();</span><br><span class="line">  <span class="comment">// 这个方法将连接到你的桌面 Chrome 的新标签页</span></span><br><span class="line">  <span class="comment">// 记得启动你的 Chrome 插件，并点击 &#x27;allow connection&#x27; 按钮。否则你会得到一个 timeout 错误</span></span><br><span class="line">  <span class="keyword">await</span> agent.<span class="title function_">connectNewTabWithUrl</span>(<span class="string">&quot;https://www.bing.com&quot;</span>);</span><br><span class="line">  <span class="comment">// 这些方法与普通 Midscene agent 相同</span></span><br><span class="line">  <span class="keyword">await</span> agent.<span class="title function_">ai</span>(<span class="string">&quot;输入 iMaeGoo 点击搜索&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> agent.<span class="title function_">aiQuery</span>(</span><br><span class="line">    <span class="string">&quot;&#123;title: string, url: string&#125;[], 搜索结果&quot;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;搜索结果&quot;</span>, result);</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3000</span>);</span><br><span class="line">  <span class="keyword">await</span> agent.<span class="title function_">destroy</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>();</span><br></pre></td></tr></table></figure><p>启动你的 Chrome 插件，点击 Bridge Mode，再点击 ‘Allow connection’ 按钮——</p><p><img src="/gallery/2025/midscene-js/1742372557434.webp"></p><p>随后运行脚本——</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpx tsx main.ts</span><br></pre></td></tr></table></figure><p>可以看到脚本成功打开必应搜索 iMaeGoo 并打印出了搜索结果——</p><p><img src="/gallery/2025/midscene-js/1742372311167.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;字节有一个很实用但不怎么火的项目，叫 Midscene.js，Chrome 商店上的安装数仅有 1 万，它是一个由多模态模型驱动的前端自动化测试插件。&lt;/p&gt;
&lt;p&gt;Midscene.js 一共就三大 API：Action、Query、Assert&lt;/p&gt;
&lt;h3 id=&quot;Action-交互&quot;&gt;&lt;a href=&quot;#Action-交互&quot; class=&quot;headerlink&quot; title=&quot;Action 交互&quot;&gt;&lt;/a&gt;Action 交互&lt;/h3&gt;&lt;p&gt;描述步骤并执行交互。例如，在 GitHub 上交互：查找 GitHub 上的 Twikoo 项目，点进详情页，点个 Star——&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="nodejs" scheme="https://www.imaegoo.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>仅需两个文件，实现在 VS Code 状态栏监控黄金价格</title>
    <link href="https://www.imaegoo.com/2025/vscode-ext-gold-monitor/"/>
    <id>https://www.imaegoo.com/2025/vscode-ext-gold-monitor/</id>
    <published>2025-02-21T00:00:00.000Z</published>
    <updated>2025-02-21T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近金价波动剧烈，要是能一边写代码，一边实时监控金价变动，就不会错过高低点了！</p><p>在 <code>C:\Users\你的用户名\.vscode\extensions</code> 新建文件夹 <code>gold-monitor</code>，在文件夹中创建两个文件 <code>package.json</code> 和 <code>extension.js</code>。</p><span id="more"></span><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jd-gold-price-monitor&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JD Gold Price Monitor&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Monitor gold price from JD&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iMaeGoo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;publisher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iMaeGoo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;vscode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.85.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;categories&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;Other&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;activationEvents&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;onStartupFinished&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./extension.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;contributes&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gold-price-monitor.start&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Start Gold Price Monitor&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>extension.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vscode = <span class="built_in">require</span>(<span class="string">&quot;vscode&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> statusBarItem;</span><br><span class="line"><span class="keyword">let</span> intervalId;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">activate</span>(<span class="params">context</span>) &#123;</span><br><span class="line">  <span class="comment">// 创建状态栏项</span></span><br><span class="line">  statusBarItem = vscode.<span class="property">window</span>.<span class="title function_">createStatusBarItem</span>(</span><br><span class="line">    <span class="comment">// 在状态栏左半边显示</span></span><br><span class="line">    vscode.<span class="property">StatusBarAlignment</span>.<span class="property">Left</span>,</span><br><span class="line">    <span class="comment">// 数字越大，越靠左</span></span><br><span class="line">    -<span class="number">999</span></span><br><span class="line">  );</span><br><span class="line">  context.<span class="property">subscriptions</span>.<span class="title function_">push</span>(statusBarItem);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注册命令</span></span><br><span class="line">  <span class="keyword">let</span> disposable = vscode.<span class="property">commands</span>.<span class="title function_">registerCommand</span>(</span><br><span class="line">    <span class="string">&quot;gold-price-monitor.start&quot;</span>,</span><br><span class="line">    <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">startMonitoring</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  context.<span class="property">subscriptions</span>.<span class="title function_">push</span>(disposable);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 激活时自动开始监控</span></span><br><span class="line">  <span class="title function_">startMonitoring</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">updateGoldPrice</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> price = <span class="keyword">await</span> <span class="title function_">getPrice</span>();</span><br><span class="line">    statusBarItem.<span class="property">text</span> = price;</span><br><span class="line">    statusBarItem.<span class="title function_">show</span>();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;获取价格失败&quot;</span>, error);</span><br><span class="line">    statusBarItem.<span class="property">text</span> = error.<span class="property">message</span>;</span><br><span class="line">    statusBarItem.<span class="title function_">show</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getPrice</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取京东金融民生银行积存金价</span></span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(</span><br><span class="line">    <span class="string">&quot;https://api.jdjygold.com/gw/generic/hj/h5/m/latestPrice?reqData=&#123;&#125;&quot;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">  <span class="keyword">const</span> price = data.<span class="property">resultData</span>.<span class="property">datas</span>.<span class="property">price</span>;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startMonitoring</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 清除现有的定时器</span></span><br><span class="line">  <span class="keyword">if</span> (intervalId) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(intervalId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 立即更新一次</span></span><br><span class="line">  <span class="title function_">updateGoldPrice</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置定时器，每隔 6666 毫秒更新一次</span></span><br><span class="line">  intervalId = <span class="built_in">setInterval</span>(updateGoldPrice, <span class="number">6666</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">deactivate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (intervalId) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(intervalId);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  activate,</span><br><span class="line">  deactivate,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>重新启动 VS Code（Ctrl + Shift + P，输入 reload window，回车）即可看到效果。</p><p><img src="/gallery/2025/vscode-ext-gold-monitor/1.webp"></p><p>如果你想监测其他品牌金价，可以修改 <code>getPrice</code> 方法，具体实现如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">zheshang</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取京东金融浙商银行积存金价</span></span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(</span><br><span class="line">    <span class="string">&quot;https://api.jdjygold.com/gw2/generic/jrm/h5/m/stdLatestPrice?productSku=1961543816&quot;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">  <span class="keyword">const</span> price = data.<span class="property">resultData</span>.<span class="property">datas</span>.<span class="property">price</span>;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">zhoushengsheng</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取周生生首饰金价</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;https://cn.chowsangsang.com/gold-info&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">text</span>();</span><br><span class="line">    <span class="keyword">const</span> gold_data_match = data.<span class="title function_">match</span>(<span class="regexp">/:gold_data=&#x27;(.*)&#x27;/</span>);</span><br><span class="line">    <span class="keyword">const</span> gold_data = gold_data_match</span><br><span class="line">      ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title function_">decode</span>(gold_data_match[<span class="number">1</span>]))</span><br><span class="line">      : [];</span><br><span class="line">    <span class="keyword">const</span> price = gold_data.<span class="title function_">find</span>(</span><br><span class="line">      <span class="function">(<span class="params">i: any</span>) =&gt;</span> i.<span class="property">description</span> === <span class="string">&quot;黄金金价&quot;</span></span><br><span class="line">    ).<span class="property">price</span>;</span><br><span class="line">    <span class="keyword">return</span> price;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;zhoushengsheng&quot;</span>, e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">laofengxiang</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取老凤祥首饰金价</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;http://lfx1848.com&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">text</span>();</span><br><span class="line">  <span class="keyword">const</span> price_match = data.<span class="title function_">match</span>(<span class="regexp">/&lt;span id=&quot;labContent&quot;&gt;(.*)&lt;\/span&gt;/</span>);</span><br><span class="line">  <span class="keyword">const</span> price = price_match ? price_match[<span class="number">1</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">zhouliufu</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取周六福首饰金价</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;https://price.zlf.cn/index_35.aspx&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">text</span>();</span><br><span class="line">  <span class="keyword">const</span> price_match = data.<span class="title function_">match</span>(<span class="regexp">/&lt;span class=&quot;fr&quot;&gt;(.*)&lt;\/span&gt;/</span>);</span><br><span class="line">  <span class="keyword">const</span> price = price_match ? price_match[<span class="number">1</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">liufuzhubao</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取六福珠宝首饰金价</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;https://www.lukfookeshop.com.cn&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">text</span>();</span><br><span class="line">  <span class="keyword">const</span> price_match = data.<span class="title function_">match</span>(<span class="regexp">/&gt;：(.*?)元\/克/</span>);</span><br><span class="line">  <span class="keyword">const</span> price = price_match ? price_match[<span class="number">1</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">zhoudafu</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取周大福首饰金价</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(</span><br><span class="line">    <span class="string">`https://api2.ctfmall.com/gateway//ctfmall-common2-server/common/ctfTodayGoldPrice?timestamp=<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">data</span>: any = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">  <span class="keyword">const</span> price = data.<span class="property">data</span>.<span class="property">todayPriceHK</span>;</span><br><span class="line">  <span class="keyword">return</span> price;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">laomiao</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取老庙首饰金价</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(</span><br><span class="line">    <span class="string">&quot;https://vip.laomiao.com.cn/index.php/m/home-gold_price.html&quot;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">data</span>: any = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">  <span class="keyword">const</span> price = data.<span class="property">data</span>.<span class="property">price_list</span>.<span class="title function_">find</span>(</span><br><span class="line">    <span class="function">(<span class="params">i: any</span>) =&gt;</span> i.<span class="property">name</span> === <span class="string">&quot;足金饰品&quot;</span></span><br><span class="line">  ).<span class="property">price</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseInt</span>(price);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近金价波动剧烈，要是能一边写代码，一边实时监控金价变动，就不会错过高低点了！&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;C:&#92;Users&#92;你的用户名&#92;.vscode&#92;extensions&lt;/code&gt; 新建文件夹 &lt;code&gt;gold-monitor&lt;/code&gt;，在文件夹中创建两个文件 &lt;code&gt;package.json&lt;/code&gt; 和 &lt;code&gt;extension.js&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="nodejs" scheme="https://www.imaegoo.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Android 14 APP 全屏代码实现</title>
    <link href="https://www.imaegoo.com/2024/android-fullscreen/"/>
    <id>https://www.imaegoo.com/2024/android-fullscreen/</id>
    <published>2024-11-21T13:08:00.000Z</published>
    <updated>2024-11-21T13:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>新的 Android API 改变了应用全屏的方式，网上搜到的全屏代码都不管用了，甚至 <a href="https://developer.android.com/training/system-ui/status?hl=zh-cn">谷歌自己的教程</a> 都没有更新，看了 API 文档才研究明白最新代码怎么写。本篇讲述两种新的全屏方式，一种保留状态栏文字的全屏，一种隐藏状态栏的全屏。</p><span id="more"></span><h3 id="保留状态栏，适配全面屏"><a href="#保留状态栏，适配全面屏" class="headerlink" title="保留状态栏，适配全面屏"></a>保留状态栏，适配全面屏</h3><p>默认情况下，应用界面不会延伸到系统状态栏、导航栏、导航条等区域，这会很丑，要想适配全面屏显示，在 Android 14 中，可以用一行代码简单实现。</p><figure class="highlight kt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import androidx.activity.enableEdgeToEdg</span></span><br><span class="line"></span><br><span class="line">enableEdgeToEdge()</span><br></pre></td></tr></table></figure><h3 id="隐藏状态栏，完全全屏"><a href="#隐藏状态栏，完全全屏" class="headerlink" title="隐藏状态栏，完全全屏"></a>隐藏状态栏，完全全屏</h3><p>适配全面屏并不会隐藏系统状态栏、导航栏、导航条，如果想实现完全全屏，老办法一般是调用 <code>setSystemUiVisibility()</code>，然而这个方法在 14 中已经弃用了，获取 <code>InsetsController</code> 的 <code>ViewCompat.getWindowInsetsController()</code> 方法也被弃用了，最新的写法是：</p><figure class="highlight kt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import androidx.core.view.WindowCompat</span></span><br><span class="line"><span class="comment">// import androidx.core.view.WindowInsetsCompat</span></span><br><span class="line"><span class="comment">// import androidx.core.view.WindowInsetsControllerCompat</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> windowController = WindowCompat.getInsetsController(window, window.decorView)</span><br><span class="line"><span class="comment">// 应用全屏时，用户仍然可以从屏幕顶部下拉唤出状态栏，此行代码实现当用户唤出状态栏后，自动隐藏状态栏</span></span><br><span class="line">windowController.systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE</span><br><span class="line"><span class="comment">// 隐藏包括状态栏、导航栏、caption bar 在内的所有系统栏</span></span><br><span class="line">windowController.hide(WindowInsetsCompat.Type.systemBars())</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;新的 Android API 改变了应用全屏的方式，网上搜到的全屏代码都不管用了，甚至 &lt;a href=&quot;https://developer.android.com/training/system-ui/status?hl=zh-cn&quot;&gt;谷歌自己的教程&lt;/a&gt; 都没有更新，看了 API 文档才研究明白最新代码怎么写。本篇讲述两种新的全屏方式，一种保留状态栏文字的全屏，一种隐藏状态栏的全屏。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Android" scheme="https://www.imaegoo.com/categories/tech/android/"/>
    
    
    <category term="android" scheme="https://www.imaegoo.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>屠龙者终成恶龙</title>
    <link href="https://www.imaegoo.com/2024/sensational-headlines/"/>
    <id>https://www.imaegoo.com/2024/sensational-headlines/</id>
    <published>2024-11-14T10:00:00.000Z</published>
    <updated>2024-11-14T10:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>赚了眼球丢了节操</p><span id="more"></span><p><img src="/gallery/2024/sensational-headlines/1.webp"></p><p><img src="/gallery/2024/sensational-headlines/2.webp"></p><p><img src="/gallery/2024/sensational-headlines/3.webp"></p><p><img src="/gallery/2024/sensational-headlines/4.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;赚了眼球丢了节操&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>前端人的 Python、Conda 环境搭建</title>
    <link href="https://www.imaegoo.com/2024/python-conda-setup/"/>
    <id>https://www.imaegoo.com/2024/python-conda-setup/</id>
    <published>2024-09-19T11:00:00.000Z</published>
    <updated>2024-09-20T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>许多 AI 相关的项目、游戏辅助工具都使用 Python 语言开发，迫使我开始接触 Python 的环境搭建。作为一个前端人，我已经对 Node.js、NVM、NPM 等工具再熟悉不过了，但搭建 Python 的过程中还是碰到了不少困难，在此记录一下，让和我一样的前端人能更快地理解 Python 的生态体系。</p><h2 id="Python-生态"><a href="#Python-生态" class="headerlink" title="Python 生态"></a>Python 生态</h2><ul><li><strong>Python</strong>: Python 解释器和运行时环境，对应前端体系中的 Node.js，官网 <a href="https://www.python.org/">www.python.org</a></li><li><strong>Pip</strong>: Python 的包管理工具，对应前端体系中的 NPM，官网 <a href="https://pypi.org/">pypi.org</a></li><li><strong>Conda</strong>: 用于管理 Python 环境，对应前端体系中的 NVM，但又略有区别</li></ul><p>NPM 在安装项目依赖时，会安装在项目的 node_modules 目录下，也就是局部安装，各个项目之间互相不影响，而 Pip 则是默认装在全局，这和前端的思维不一致。装在全局会造成多个项目的管理不便，各个项目之间依赖冲突、相同依赖的不同版本无法同时存在。</p><p>为了解决这个问题，Conda 就出现了，它可以创建完全隔离的多个不同的 Python 环境，每个环境可以指定不同的 Python 版本，每个环境所安装的依赖也相互隔离。</p><span id="more"></span><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>为了搭建 Python 环境，新手往往会先想到安装 Python，但实际上 Conda 已经内置了 Python，我们 <strong>只需要安装一个 Conda</strong>，就完成环境安装了。</p><p>Conda 有三个发行的安装包，分别是 Anaconda、Miniconda、Miniforge，其中 Anaconda 最出名，它已经内置了数千个常用的科学计算依赖包，属于是开箱即用，但缺点是安装包体积达到了惊人的 912 MB。</p><p>Miniconda 就比较小巧了，它没有内置常用依赖，体积也降到了 85 MB，对于我这种需求不高的用户，显然更合适。</p><ol><li>下载 Miniconda: <a href="https://docs.anaconda.com/miniconda/#latest-miniconda-installer-links">https://docs.anaconda.com/miniconda/#latest-miniconda-installer-links</a></li><li>安装时有一步 Advanced Installation Options，建议选中 “Clear the package cache upon completion”，可以节省部分硬盘空间</li></ol><h2 id="修改软件源"><a href="#修改软件源" class="headerlink" title="修改软件源"></a>修改软件源</h2><p>和 NPM 一样，默认的国外软件源在国内是无法流畅使用的。我们需要在用户根目录（<code>C:\Users\你的用户名</code>）创建一个 <code>.condarc</code> 文件，输入以下内容来切换成国内源</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">default_channels:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch</span></span><br></pre></td></tr></table></figure><h2 id="修改环境位置"><a href="#修改环境位置" class="headerlink" title="修改环境位置"></a>修改环境位置</h2><p>如果你不想让以后安装的依赖占用 C 盘的空间，还需要提前修改环境位置，在上一步的 <code>.condarc</code> 文件中增加两行</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">envs_dirs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">D:\dev\condaenvs</span></span><br></pre></td></tr></table></figure><h2 id="环境创建"><a href="#环境创建" class="headerlink" title="环境创建"></a>环境创建</h2><p><img src="/gallery/2024/python-conda-setup/1.webp"></p><p>在开始中搜索 “anaconda”，找到 “Anaconda Prompt (miniconda3)” 并打开，然后执行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n 环境名称 python=<span class="number">3</span>.<span class="number">12</span> -y</span><br></pre></td></tr></table></figure><p>替换命令中的环境名称为你定义的环境名称，替换命令中的 3.12 为你需要的 Python 版本</p><p>这样就完成环境的创建了，执行 <code>conda env list</code> 可以查看环境列表</p><h2 id="环境切换"><a href="#环境切换" class="headerlink" title="环境切换"></a>环境切换</h2><p>仍然是在 Anaconda Prompt 中执行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate 环境名称</span><br></pre></td></tr></table></figure><p>这样就切换到了对应的环境中</p><h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><p>仍然是在 Anaconda Prompt 中执行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /d 项目目录</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>注意 <code>-r</code> 后跟项目依赖声明文件，有可能叫 <code>requirements.txt</code>，也有可能叫 <code>requirements-prod.txt</code>，之类的</p><p>安装好依赖后，就可以启动项目啦！具体如何启动可以参考项目的 README 文件。</p><h2 id="在-bat-中切换-Conda-环境"><a href="#在-bat-中切换-Conda-环境" class="headerlink" title="在 bat 中切换 Conda 环境"></a>在 bat 中切换 Conda 环境</h2><p>有时候我们需要编写 bat 脚本来执行一些自动化任务（例如定时执行），这时我们会发现，由于脚本执行时没有切换到指定的 Conda 环境中，会报 Python 找不到的错误。怎样在 bat 脚本中切换 Conda 环境呢？</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> /d 项目目录</span><br><span class="line"><span class="keyword">call</span> D:\dev\anaconda3\Scripts\activate.bat D:\dev\anaconda3</span><br><span class="line"><span class="keyword">call</span> conda activate 环境名称</span><br><span class="line">python 项目主入口.py</span><br></pre></td></tr></table></figure><p>替换命令中的 <code>D:\dev\anaconda3</code> 为你的 Conda 安装路径，替换最后一行命令为项目的启动命令</p><h2 id="配置-PyCharm"><a href="#配置-PyCharm" class="headerlink" title="配置 PyCharm"></a>配置 PyCharm</h2><p>如果你和我一样在用 PyCharm 开发工程，还需要在其中配置工程所使用的 Conda 环境</p><ol><li>在 PyCharm 中打开工程</li><li>打开 文件-设置-项目-Python 解释器-添加解释器-添加本地解释器</li></ol><p><img src="/gallery/2024/python-conda-setup/2.webp"></p><ol start="3"><li>选择 Conda 环境，选择 <code>conda.exe</code> 所在位置，然后选择刚才创建好的环境，然后确定</li></ol><p><img src="/gallery/2024/python-conda-setup/3.webp"></p><ol start="4"><li>回到设置窗口选择刚刚添加好的解释器，大功告成</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;许多 AI 相关的项目、游戏辅助工具都使用 Python 语言开发，迫使我开始接触 Python 的环境搭建。作为一个前端人，我已经对 Node.js、NVM、NPM 等工具再熟悉不过了，但搭建 Python 的过程中还是碰到了不少困难，在此记录一下，让和我一样的前端人能更快地理解 Python 的生态体系。&lt;/p&gt;
&lt;h2 id=&quot;Python-生态&quot;&gt;&lt;a href=&quot;#Python-生态&quot; class=&quot;headerlink&quot; title=&quot;Python 生态&quot;&gt;&lt;/a&gt;Python 生态&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: Python 解释器和运行时环境，对应前端体系中的 Node.js，官网 &lt;a href=&quot;https://www.python.org/&quot;&gt;www.python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pip&lt;/strong&gt;: Python 的包管理工具，对应前端体系中的 NPM，官网 &lt;a href=&quot;https://pypi.org/&quot;&gt;pypi.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conda&lt;/strong&gt;: 用于管理 Python 环境，对应前端体系中的 NVM，但又略有区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NPM 在安装项目依赖时，会安装在项目的 node_modules 目录下，也就是局部安装，各个项目之间互相不影响，而 Pip 则是默认装在全局，这和前端的思维不一致。装在全局会造成多个项目的管理不便，各个项目之间依赖冲突、相同依赖的不同版本无法同时存在。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，Conda 就出现了，它可以创建完全隔离的多个不同的 Python 环境，每个环境可以指定不同的 Python 版本，每个环境所安装的依赖也相互隔离。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
</feed>
